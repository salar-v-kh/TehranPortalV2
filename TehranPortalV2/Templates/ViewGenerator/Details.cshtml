@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
        @:ViewBag.Title = "جزئیــات فیلد";
        @:ViewBag.TitlePage = "جزئیــات فیلد";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}
<div class="row tehranit-box">
    <!--right post-->
    <div class="col-12 col-xl-9">
        <!--itemBox-->
        <div class="content-box">
            <div class="title-box mb-3">
                <span>جزئیــات فیلد</span>
                <i class="bi bi-eye-fill"></i>
            </div>
            <dl class="row">
                    @{
                    Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
                    Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

                    foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
                    {
                        if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                            && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                        {
                        <dt class = "col-sm-2">
                            @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                        </dt>
                        <dd class = "col-sm-10">
                            @@Html.DisplayFor(model => model.@GetValueExpression(property))
                        </dd>
                        }
                        else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
                        {
                        <dt class = "col-sm-2">
                            @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))
                        </dt>
                        <dd class = "col-sm-10">
                            @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                        </dd>
                        }
                    }
        }    </dl>
        </div>
    </div>
    <!--left post-->
    <div class="col-12 col-xl-3">
        <div class="row">
            <!--itemBox-->
            <div class="col-xl-12 col-lg-4 col-md-6 col-sm-6 col-12">
                <div class="content-box">
                    <div class="title-box">
                        <span>اقـــدامات</span>
                        <i class="bi bi-gear-fill"></i>
                    </div>
                    <div class="publishBtn-box">
                        <div>
@{
string pkName = GetPrimaryKeyName();
if (pkName != null)
{
@:                          <a class="bt btn-publish" asp-action="Edit" asp-route-id="@@Model.Id">ویرایش</a>
@:                          <a asp-action="Index" class="bt btn-update">بازگشت به لیست</a>
}
else
{
@:                          <a class="bt btn-publish" asp-action="Edit" asp-route-id="@@Model.Id">ویرایش</a>
@:                          <a asp-action="Index" class="bt btn-update">بازگشت به لیست</a>
}
}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@@section Styles{}
@@section Scripts{}

@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}
