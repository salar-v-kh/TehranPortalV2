// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalWebMVC.Models.DataBaseContex;

#nullable disable

namespace TehranPortalV2.Migrations
{
    [DbContext(typeof(PortalDBContext))]
    [Migration("20250219112336_adb")]
    partial class adb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.Branch", b =>
                {
                    b.Property<string>("BRCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("BRName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRPhone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRPhone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRPhone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("BRCode");

                    b.ToTable("TB_Branch");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.ClientPassword", b =>
                {
                    b.Property<string>("Id_Personal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Personal");

                    b.ToTable("TB_ClientPassword");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.ITLabele", b =>
                {
                    b.Property<string>("IT_CodeLable")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ITLableStatus")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("IT_CodeLable");

                    b.ToTable("TB_ITLabele");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.UserPersonal", b =>
                {
                    b.Property<string>("Id_Personal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id_Personal");

                    b.ToTable("TB_UserPersonal");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.YLable", b =>
                {
                    b.Property<string>("Y_LableCode")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("IT_CodeLable")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("YLableStatus")
                        .HasColumnType("int");

                    b.HasKey("Y_LableCode");

                    b.HasIndex("IT_CodeLable");

                    b.ToTable("TB_YLable");
                });

            modelBuilder.Entity("TehranPortalV2.Models.Entities.FirstTable.CombinedLable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ITLableCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("YLableCode")
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.HasIndex("ITLableCode");

                    b.HasIndex("YLableCode");

                    b.ToTable("TB_CombinedLables");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.ClientPassword", b =>
                {
                    b.HasOne("PortalWebMVC.Models.Entities.Base_info.UserPersonal", "UserPersonal")
                        .WithOne("ClientPassword")
                        .HasForeignKey("PortalWebMVC.Models.Entities.Base_info.ClientPassword", "Id_Personal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserPersonal");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.YLable", b =>
                {
                    b.HasOne("PortalWebMVC.Models.Entities.Base_info.ITLabele", "ITLabele")
                        .WithMany("YLables")
                        .HasForeignKey("IT_CodeLable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ITLabele");
                });

            modelBuilder.Entity("TehranPortalV2.Models.Entities.FirstTable.CombinedLable", b =>
                {
                    b.HasOne("PortalWebMVC.Models.Entities.Base_info.ITLabele", "ITLabele")
                        .WithMany()
                        .HasForeignKey("ITLableCode");

                    b.HasOne("PortalWebMVC.Models.Entities.Base_info.YLable", "YLable")
                        .WithMany()
                        .HasForeignKey("YLableCode");

                    b.Navigation("ITLabele");

                    b.Navigation("YLable");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.ITLabele", b =>
                {
                    b.Navigation("YLables");
                });

            modelBuilder.Entity("PortalWebMVC.Models.Entities.Base_info.UserPersonal", b =>
                {
                    b.Navigation("ClientPassword");
                });
#pragma warning restore 612, 618
        }
    }
}
